// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// as_coords
NumericVector as_coords(NumericVector object, const int fmt);
RcppExport SEXP _Waypoint_as_coords(SEXP objectSEXP, SEXP fmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type object(objectSEXP);
    Rcpp::traits::input_parameter< const int >::type fmt(fmtSEXP);
    rcpp_result_gen = Rcpp::wrap(as_coords(object, fmt));
    return rcpp_result_gen;
END_RCPP
}
// convertcoords
NumericVector convertcoords(NumericVector x, const int fmt);
RcppExport SEXP _Waypoint_convertcoords(SEXP xSEXP, SEXP fmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type fmt(fmtSEXP);
    rcpp_result_gen = Rcpp::wrap(convertcoords(x, fmt));
    return rcpp_result_gen;
END_RCPP
}
// latlon
NumericVector latlon(NumericVector cd, LogicalVector value);
RcppExport SEXP _Waypoint_latlon(SEXP cdSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cd(cdSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(latlon(cd, value));
    return rcpp_result_gen;
END_RCPP
}
// validatecoords
NumericVector validatecoords(NumericVector x, const bool force);
RcppExport SEXP _Waypoint_validatecoords(SEXP xSEXP, SEXP forceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const bool >::type force(forceSEXP);
    rcpp_result_gen = Rcpp::wrap(validatecoords(x, force));
    return rcpp_result_gen;
END_RCPP
}
// formatcoords
CharacterVector formatcoords(NumericVector x, bool usenames);
RcppExport SEXP _Waypoint_formatcoords(SEXP xSEXP, SEXP usenamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type usenames(usenamesSEXP);
    rcpp_result_gen = Rcpp::wrap(formatcoords(x, usenames));
    return rcpp_result_gen;
END_RCPP
}
// as_waypoints
DataFrame as_waypoints(DataFrame object, const int fmt);
RcppExport SEXP _Waypoint_as_waypoints(SEXP objectSEXP, SEXP fmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type object(objectSEXP);
    Rcpp::traits::input_parameter< const int >::type fmt(fmtSEXP);
    rcpp_result_gen = Rcpp::wrap(as_waypoints(object, fmt));
    return rcpp_result_gen;
END_RCPP
}
// convertwaypoints
DataFrame convertwaypoints(DataFrame x, const int fmt);
RcppExport SEXP _Waypoint_convertwaypoints(SEXP xSEXP, SEXP fmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type fmt(fmtSEXP);
    rcpp_result_gen = Rcpp::wrap(convertwaypoints(x, fmt));
    return rcpp_result_gen;
END_RCPP
}
// validatewaypoints
DataFrame validatewaypoints(DataFrame x, const bool force);
RcppExport SEXP _Waypoint_validatewaypoints(SEXP xSEXP, SEXP forceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    Rcpp::traits::input_parameter< const bool >::type force(forceSEXP);
    rcpp_result_gen = Rcpp::wrap(validatewaypoints(x, force));
    return rcpp_result_gen;
END_RCPP
}
// formatwaypoints
CharacterVector formatwaypoints(DataFrame x, bool usenames);
RcppExport SEXP _Waypoint_formatwaypoints(SEXP xSEXP, SEXP usenamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type usenames(usenamesSEXP);
    rcpp_result_gen = Rcpp::wrap(formatwaypoints(x, usenames));
    return rcpp_result_gen;
END_RCPP
}
// ll_headers
CharacterVector ll_headers(const CharacterVector aswidth, const int fmt);
RcppExport SEXP _Waypoint_ll_headers(SEXP aswidthSEXP, SEXP fmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector >::type aswidth(aswidthSEXP);
    Rcpp::traits::input_parameter< const int >::type fmt(fmtSEXP);
    rcpp_result_gen = Rcpp::wrap(ll_headers(aswidth, fmt));
    return rcpp_result_gen;
END_RCPP
}
// as_coordswaypoints
NumericVector as_coordswaypoints(DataFrame object, bool which);
RcppExport SEXP _Waypoint_as_coordswaypoints(SEXP objectSEXP, SEXP whichSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type object(objectSEXP);
    Rcpp::traits::input_parameter< bool >::type which(whichSEXP);
    rcpp_result_gen = Rcpp::wrap(as_coordswaypoints(object, which));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Waypoint_as_coords", (DL_FUNC) &_Waypoint_as_coords, 2},
    {"_Waypoint_convertcoords", (DL_FUNC) &_Waypoint_convertcoords, 2},
    {"_Waypoint_latlon", (DL_FUNC) &_Waypoint_latlon, 2},
    {"_Waypoint_validatecoords", (DL_FUNC) &_Waypoint_validatecoords, 2},
    {"_Waypoint_formatcoords", (DL_FUNC) &_Waypoint_formatcoords, 2},
    {"_Waypoint_as_waypoints", (DL_FUNC) &_Waypoint_as_waypoints, 2},
    {"_Waypoint_convertwaypoints", (DL_FUNC) &_Waypoint_convertwaypoints, 2},
    {"_Waypoint_validatewaypoints", (DL_FUNC) &_Waypoint_validatewaypoints, 2},
    {"_Waypoint_formatwaypoints", (DL_FUNC) &_Waypoint_formatwaypoints, 2},
    {"_Waypoint_ll_headers", (DL_FUNC) &_Waypoint_ll_headers, 2},
    {"_Waypoint_as_coordswaypoints", (DL_FUNC) &_Waypoint_as_coordswaypoints, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_Waypoint(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
